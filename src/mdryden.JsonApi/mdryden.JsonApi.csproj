<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFramework>netcoreapp2.0</TargetFramework>
    <Authors>Michael Dryden</Authors>
    <Company>Michael Dryden</Company>
    <GeneratePackageOnBuild>true</GeneratePackageOnBuild>
    <PackageId>mdryden.JsonApi.Net</PackageId>
    <Product>mdryden.JsonApi.Net</Product>
    <RepositoryUrl>https://github.com/pudds/JsonApi.Net</RepositoryUrl>
    <PackageProjectUrl>https://github.com/pudds/JsonApi.Net</PackageProjectUrl>
    <Copyright>Michael Dryden</Copyright>
    <PackageRequireLicenseAcceptance>false</PackageRequireLicenseAcceptance>
    <Version>2.1.0-rc1</Version>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
    <FileVersion>2.1.0.0</FileVersion>
    <Description>A simple set of helper classes for the JsonAPI services I create.  Use .AddJsonApi() method in startup to configure.  Uses a formatter and exception filter to craft JsonAPI compliant responses, an provides a simple way to add API key authentication to controllers or methods.</Description>
    <PackageReleaseNotes>API now users a builder object to put the response together, so that the response objects are cleaner (helps with deserialization).  Controller methods should use now response interfaces as return types.

Calling methods need to use appropriate "As" method to get the actual response object once completely built.

Changed ApiResponse.Create() to ApiResponse.WithStatus(), and added parameterless methods for common return status codes (eg: ApiResponse.OK()).</PackageReleaseNotes>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="Microsoft.AspNetCore.Mvc" Version="2.0.1" />
    <PackageReference Include="Microsoft.Extensions.Configuration" Version="2.0.0" />
    <PackageReference Include="Microsoft.Extensions.Options" Version="2.0.0" />
    <PackageReference Include="Microsoft.Extensions.Options.ConfigurationExtensions" Version="2.0.0" />
    <PackageReference Include="Newtonsoft.Json" Version="10.0.3" />
  </ItemGroup>

</Project>
